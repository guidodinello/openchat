[tool.poetry]
name = "openfing-chat-backend"
version = "0.1.0"
description = ""
authors = [
    "Guido Dinello <guido.dinello@gmail.com>", 
    "Diego Amorena <diego.amorena@gmail.com>",
]
readme = "README.md"
license = "MIT"
repository = "https://github.com/#TODO:"
packages = [
    { include = "app" },
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"
pydantic = "^2.9.2"
prefect = "^3.1.1"
sqlalchemy-utils = "^0.41.2"
alembic = "^1.14.0"
langchain-postgres = "^0.0.12"
sentence-transformers = "^3.3.1"
langchain-huggingface = "^0.1.2"
openai-whisper = "^20240930"
torch = "^2.5.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
black = "^24.10.0"
faker = "^33.0.0"
typer = "^0.13.1"
ruff = "^0.8.0"
mypy = "^1.13.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
cli = "cli:app"
start = "cli:start"
dev = "cli:dev"


[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = []

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
strict_equality = true
