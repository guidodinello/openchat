# Base image with system dependencies
FROM python:3.12-slim
# Set environment variables
# what doe spython buffered achieves?
ENV PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1
# Add Poetry and venv to PATH
ENV PATH="$POETRY_HOME/bin:$PATH"
# Install system dependencies including development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    # why?
    git \
    # why git?
    netcat-traditional \
    # why netcat?
    && rm -rf /var/lib/apt/lists/*
# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
# Set working directory
WORKDIR /app
# Copy poetry files
COPY ./backend/poetry.lock ./backend/pyproject.toml ./
# Install all dependencies including development ones
RUN poetry config virtualenvs.create true \
    && poetry config virtualenvs.in-project true \
    && poetry install --no-root
# Development port
EXPOSE 8000
# Use entrypoint script
ENTRYPOINT ["/entrypoint.sh"]
# Default command (can be overridden in docker-compose)
CMD ["poetry", "run", "dev"]
