# Base image with system dependencies
FROM python:3.12-slim AS python-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYSETUP_PATH="/opt/pysetup" \
    VENV_PATH="/opt/pysetup/.venv"

ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# Builder image
FROM python-base AS builder

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

# Copy project requirement files
WORKDIR $PYSETUP_PATH
COPY ./backend/poetry.lock ./backend/pyproject.toml ./

# Install all dependencies including dev dependencies for worker
RUN poetry install

# Final image
FROM python-base AS final

# Copy Python dependencies from builder
COPY --from=builder $VENV_PATH $VENV_PATH

# Install runtime system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy application code
WORKDIR $PYSETUP_PATH
COPY ./backend/ .

# Create and switch to non-root user
RUN useradd --create-home prefectuser \
    && chown -R prefectuser:prefectuser $PYSETUP_PATH
USER prefectuser

# Start Prefect worker
CMD ["prefect", "worker", "start", "-p", "rag-pool"]